<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/lib/components/inputs/BooleanInput.svelte">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/lib/components/inputs/BooleanInput.svelte" />
              <option name="originalContent" value="&lt;script lang=&quot;ts&quot;&gt;&#10;&#9;import { fly } from 'svelte/transition';&#10;&#9;import { tick } from 'svelte';&#10;&#10;&#9;export let id: string;&#10;&#9;export let value: string = 'false';&#10;&#9;export let error: string = '';&#10;&#9;export let label: string = '';&#10;&#9;export let onBlur: () =&gt; void = () =&gt; {};&#10;&#10;&#9;let open = false;&#10;&#9;let query = '';&#10;&#9;let options = [&#10;&#9;&#9;{ label: 'True', value: 'true' },&#10;&#9;&#9;{ label: 'False', value: 'false' }&#10;&#9;];&#10;&#9;let filtered = options;&#10;&#9;let focusedIndex = -1;&#10;&#10;&#9;function toggle() {&#10;&#9;&#9;open = !open;&#10;&#9;&#9;if (open) {&#10;&#9;&#9;&#9;filtered = options;&#10;&#9;&#9;&#9;focusedIndex = options.findIndex(o =&gt; o.value === value);&#10;&#9;&#9;}&#10;&#9;}&#10;&#10;&#9;function close() {&#10;&#9;&#9;open = false;&#10;&#9;&#9;onBlur();&#10;&#9;}&#10;&#10;&#9;function select(option: { label: string; value: string }) {&#10;&#9;&#9;value = option.value;&#10;&#9;&#9;open = false;&#10;&#9;}&#10;&#10;&#9;function onKeyDown(e: KeyboardEvent) {&#10;&#9;&#9;if (!open) {&#10;&#9;&#9;&#9;if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === ' ') {&#10;&#9;&#9;&#9;&#9;e.preventDefault();&#10;&#9;&#9;&#9;&#9;toggle();&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;return;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;switch (e.key) {&#10;&#9;&#9;&#9;case 'ArrowDown':&#10;&#9;&#9;&#9;&#9;e.preventDefault();&#10;&#9;&#9;&#9;&#9;focusedIndex = (focusedIndex + 1) % filtered.length;&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;case 'ArrowUp':&#10;&#9;&#9;&#9;&#9;e.preventDefault();&#10;&#9;&#9;&#9;&#9;focusedIndex = (focusedIndex - 1 + filtered.length) % filtered.length;&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;case 'Enter':&#10;&#9;&#9;&#9;case ' ':&#10;&#9;&#9;&#9;&#9;e.preventDefault();&#10;&#9;&#9;&#9;&#9;if (focusedIndex &gt;= 0 &amp;&amp; focusedIndex &lt; filtered.length) {&#10;&#9;&#9;&#9;&#9;&#9;select(filtered[focusedIndex]);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;case 'Escape':&#10;&#9;&#9;&#9;&#9;e.preventDefault();&#10;&#9;&#9;&#9;&#9;close();&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;}&#10;&#9;}&#10;&#10;&#9;$: filtered = options.filter(o =&gt;&#10;&#9;&#9;o.label.toLowerCase().includes(query.toLowerCase())&#10;&#9;);&#10;&#10;&#9;async function onInput(e: Event) {&#10;&#9;&#9;const target = e.target as HTMLInputElement;&#10;&#9;&#9;query = target.value;&#10;&#9;&#9;await tick();&#10;&#9;&#9;focusedIndex = 0;&#10;&#9;}&#10;&#10;&#9;function onFocus() {&#10;&#9;&#9;open = true;&#10;&#9;&#9;filtered = options;&#10;&#9;&#9;focusedIndex = options.findIndex(o =&gt; o.value === value);&#10;&#9;}&#10;&#10;&#9;function onBlurHandler() {&#10;&#9;&#9;setTimeout(() =&gt; {&#10;&#9;&#9;&#9;if (!document.activeElement?.closest(`#${id}-dropdown`)) {&#10;&#9;&#9;&#9;&#9;close();&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}, 150);&#10;&#9;}&#10;&lt;/script&gt;&#10;&#10;&lt;div class=&quot;flex flex-col w-full&quot; id={id}&gt;&#10;&#9;&lt;label&#10;&#9;&#9;for={`${id}-input`}&#10;&#9;&#9;class=&quot;mb-1 text-xs font-medium text-gray-500 select-none&quot;&#10;&#9;&gt;{label}&lt;/label&#10;&#9;&gt;&#10;&#10;&#9;&lt;div&#10;&#9;&#9;tabindex=&quot;0&quot;&#10;&#9;&#9;id={`${id}-input`}&#10;&#9;&#9;class=&quot;relative flex w-full cursor-pointer items-center rounded-lg border border-gray-300 bg-gradient-to-br from-white to-gray-50 px-4 py-2 text-base text-gray-900 shadow-sm transition focus-within:ring-2 focus-within:ring-blue-400 focus-within:outline-none {error ? 'border-red-400' : ''}&quot;&#10;&#9;&#9;on:keydown={onKeyDown}&#10;&#9;&#9;on:focus={onFocus}&#10;&#9;&#9;on:blur={onBlurHandler}&#10;&#9;&#9;role=&quot;combobox&quot;&#10;&#9;&#9;aria-expanded={open}&#10;&#9;&#9;aria-haspopup=&quot;listbox&quot;&#10;&#9;&#9;aria-controls={`${id}-dropdown`}&#10;&#9;&gt;&#10;&#9;&#9;&lt;input&#10;&#9;&#9;&#9;class=&quot;w-full border-none p-0 m-0 text-base text-gray-900 bg-white focus:outline-none placeholder-gray-400 rounded-md&quot;&#10;&#9;&#9;&#9;autocomplete=&quot;off&quot;&#10;&#9;&#9;&#9;placeholder=&quot;Select...&quot;&#10;&#9;&#9;&#9;value={query || options.find(o =&gt; o.value === value)?.label}&#10;&#9;&#9;&#9;on:input={onInput}&#10;&#9;&#9;&#9;readonly={false}&#10;&#9;&#9;/&gt;&#10;&#9;&#9;&lt;span class=&quot;material-symbols-outlined pointer-events-none select-none text-gray-300 ml-2 text-lg transition-transform duration-200 {open ? 'rotate-180' : ''}&quot;&gt;&#10;&#9;&#9;&#9;arrow_drop_down&#10;&#9;&#9;&lt;/span&gt;&#10;&#10;&#9;&#9;{#if open}&#10;&#9;&#9;&#9;&lt;ul&#10;&#9;&#9;&#9;&#9;id={`${id}-dropdown`}&#10;&#9;&#9;&#9;&#9;class=&quot;absolute top-full left-0 z-20 mt-2 max-h-40 w-full overflow-auto rounded-md border border-gray-100 bg-white shadow animate-fade-in&quot;&#10;&#9;&#9;&#9;&#9;transition:fly={{ y: 2, duration: 80 }}&#10;&#9;&#9;&#9;&gt;&#10;&#9;&#9;&#9;&#9;{#if filtered.length === 0}&#10;&#9;&#9;&#9;&#9;&#9;&lt;li class=&quot;px-4 py-2 text-gray-400 text-sm&quot;&gt;No options found&lt;/li&gt;&#10;&#9;&#9;&#9;&#9;{:else}&#10;&#9;&#9;&#9;&#9;&#9;{#each filtered as option, i}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;li&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;class=&quot;cursor-pointer px-4 py-2 text-sm transition-colors duration-75 hover:bg-gray-50 {i === focusedIndex ? 'bg-blue-50 font-medium' : ''} rounded-md flex items-center justify-between&quot;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;button class=&quot;w-full text-left bg-transparent border-none p-0 m-0 flex items-center justify-between&quot; on:mousedown|preventDefault={() =&gt; select(option)}&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{option.label}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{#if value === option.value}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;span class=&quot;material-symbols-outlined text-blue-400 text-base ml-2&quot;&gt;check&lt;/span&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{/if}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/button&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/li&gt;&#10;&#9;&#9;&#9;&#9;&#9;{/each}&#10;&#9;&#9;&#9;&#9;{/if}&#10;&#9;&#9;&#9;&lt;/ul&gt;&#10;&#9;&#9;{/if}&#10;&#9;&lt;/div&gt;&#10;&#9;{#if error}&#10;&#9;&#9;&lt;p class=&quot;mt-1 text-sm text-red-500&quot;&gt;{error}&lt;/p&gt;&#10;&#9;{/if}&#10;&lt;/div&gt;&#10;&#10;&lt;style&gt;&#10;    input:focus {&#10;        outline: none;&#10;    }&#10;&lt;/style&gt;&#10;" />
              <option name="updatedContent" value="&lt;script lang=&quot;ts&quot;&gt;&#10;&#9;import { fly } from 'svelte/transition';&#10;&#9;import { tick } from 'svelte';&#10;&#10;&#9;export let id: string;&#10;&#9;export let value: string = 'false';&#10;&#9;export let error: string = '';&#10;&#9;export let label: string = '';&#10;&#9;export let onBlur: () =&gt; void = () =&gt; {};&#10;&#10;&#9;let open = false;&#10;&#9;let query = '';&#10;&#9;let options = [&#10;&#9;&#9;{ label: 'True', value: 'true' },&#10;&#9;&#9;{ label: 'False', value: 'false' }&#10;&#9;];&#10;&#9;let filtered = options;&#10;&#9;let focusedIndex = -1;&#10;&#10;&#9;function toggle() {&#10;&#9;&#9;open = !open;&#10;&#9;&#9;if (open) {&#10;&#9;&#9;&#9;filtered = options;&#10;&#9;&#9;&#9;focusedIndex = options.findIndex(o =&gt; o.value === value);&#10;&#9;&#9;}&#10;&#9;}&#10;&#10;&#9;function close() {&#10;&#9;&#9;open = false;&#10;&#9;&#9;onBlur();&#10;&#9;}&#10;&#10;&#9;function select(option: { label: string; value: string }) {&#10;&#9;&#9;value = option.value;&#10;&#9;&#9;open = false;&#10;&#9;}&#10;&#10;&#9;function onKeyDown(e: KeyboardEvent) {&#10;&#9;&#9;if (!open) {&#10;&#9;&#9;&#9;if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === ' ') {&#10;&#9;&#9;&#9;&#9;e.preventDefault();&#10;&#9;&#9;&#9;&#9;toggle();&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;return;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;switch (e.key) {&#10;&#9;&#9;&#9;case 'ArrowDown':&#10;&#9;&#9;&#9;&#9;e.preventDefault();&#10;&#9;&#9;&#9;&#9;focusedIndex = (focusedIndex + 1) % filtered.length;&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;case 'ArrowUp':&#10;&#9;&#9;&#9;&#9;e.preventDefault();&#10;&#9;&#9;&#9;&#9;focusedIndex = (focusedIndex - 1 + filtered.length) % filtered.length;&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;case 'Enter':&#10;&#9;&#9;&#9;case ' ':&#10;&#9;&#9;&#9;&#9;e.preventDefault();&#10;&#9;&#9;&#9;&#9;if (focusedIndex &gt;= 0 &amp;&amp; focusedIndex &lt; filtered.length) {&#10;&#9;&#9;&#9;&#9;&#9;select(filtered[focusedIndex]);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;case 'Escape':&#10;&#9;&#9;&#9;&#9;e.preventDefault();&#10;&#9;&#9;&#9;&#9;close();&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;}&#10;&#9;}&#10;&#10;&#9;$: filtered = options.filter(o =&gt;&#10;&#9;&#9;o.label.toLowerCase().includes(query.toLowerCase())&#10;&#9;);&#10;&#10;&#9;async function onInput(e: Event) {&#10;&#9;&#9;const target = e.target as HTMLInputElement;&#10;&#9;&#9;query = target.value;&#10;&#9;&#9;await tick();&#10;&#9;&#9;focusedIndex = 0;&#10;&#9;}&#10;&#10;&#9;function onFocus() {&#10;&#9;&#9;open = true;&#10;&#9;&#9;filtered = options;&#10;&#9;&#9;focusedIndex = options.findIndex(o =&gt; o.value === value);&#10;&#9;}&#10;&#10;&#9;function onBlurHandler() {&#10;&#9;&#9;setTimeout(() =&gt; {&#10;&#9;&#9;&#9;if (!document.activeElement?.closest(`#${id}-dropdown`)) {&#10;&#9;&#9;&#9;&#9;close();&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}, 150);&#10;&#9;}&#10;&lt;/script&gt;&#10;&#10;&lt;div class=&quot;flex flex-col w-full&quot; id={id}&gt;&#10;&#9;&lt;label&#10;&#9;&#9;for={`${id}-input`}&#10;&#9;&#9;class=&quot;mb-1 text-xs font-medium text-gray-500 select-none&quot;&#10;&#9;&gt;{label}&lt;/label&#10;&#9;&gt;&#10;&#10;&#9;&lt;div&#10;&#9;&#9;tabindex=&quot;0&quot;&#10;&#9;&#9;id={`${id}-input`}&#10;&#9;&#9;class=&quot;relative flex w-full cursor-pointer items-center rounded border border-gray-200 bg-white px-3 py-2 text-base text-gray-900 transition focus-within:ring-2 focus-within:ring-blue-200 focus-within:outline-none {error ? 'border-red-400' : ''}&quot;&#10;&#9;&#9;on:keydown={onKeyDown}&#10;&#9;&#9;on:focus={onFocus}&#10;&#9;&#9;on:blur={onBlurHandler}&#10;&#9;&#9;role=&quot;combobox&quot;&#10;&#9;&#9;aria-expanded={open}&#10;&#9;&#9;aria-haspopup=&quot;listbox&quot;&#10;&#9;&#9;aria-controls={`${id}-dropdown`}&#10;&#9;&gt;&#10;&#9;&#9;&lt;input&#10;&#9;&#9;&#9;class=&quot;w-full border-none p-0 m-0 text-base text-gray-900 bg-white focus:outline-none placeholder-gray-400 rounded&quot;&#10;&#9;&#9;&#9;autocomplete=&quot;off&quot;&#10;&#9;&#9;&#9;placeholder=&quot;Select...&quot;&#10;&#9;&#9;&#9;value={query || options.find(o =&gt; o.value === value)?.label}&#10;&#9;&#9;&#9;on:input={onInput}&#10;&#9;&#9;&#9;readonly={false}&#10;&#9;&#9;/&gt;&#10;&#9;&#9;&lt;span class=&quot;material-symbols-outlined pointer-events-none select-none text-gray-300 ml-2 text-lg transition-transform duration-200 {open ? 'rotate-180' : ''}&quot;&gt;&#10;&#9;&#9;&#9;arrow_drop_down&#10;&#9;&#9;&lt;/span&gt;&#10;&#10;&#9;&#9;{#if open}&#10;&#9;&#9;&#9;&lt;ul&#10;&#9;&#9;&#9;&#9;id={`${id}-dropdown`}&#10;&#9;&#9;&#9;&#9;class=&quot;absolute top-full left-0 z-20 mt-2 max-h-40 w-full overflow-auto rounded border border-gray-200 bg-white animate-fade-in&quot;&#10;&#9;&#9;&#9;&#9;transition:fly={{ y: 2, duration: 80 }}&#10;&#9;&#9;&#9;&gt;&#10;&#9;&#9;&#9;&#9;{#if filtered.length === 0}&#10;&#9;&#9;&#9;&#9;&#9;&lt;li class=&quot;px-4 py-2 text-gray-400 text-sm&quot;&gt;No options found&lt;/li&gt;&#10;&#9;&#9;&#9;&#9;{:else}&#10;&#9;&#9;&#9;&#9;&#9;{#each filtered as option, i}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;li&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;class=&quot;cursor-pointer px-4 py-2 text-sm transition-colors duration-75 hover:bg-blue-50 {i === focusedIndex ? 'bg-blue-100 font-medium' : ''} rounded flex items-center justify-between&quot;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;button class=&quot;w-full text-left bg-transparent border-none p-0 m-0 flex items-center justify-between&quot; on:mousedown|preventDefault={() =&gt; select(option)}&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{option.label}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{#if value === option.value}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;span class=&quot;material-symbols-outlined text-blue-400 text-base ml-2&quot;&gt;check&lt;/span&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{/if}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/button&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/li&gt;&#10;&#9;&#9;&#9;&#9;&#9;{/each}&#10;&#9;&#9;&#9;&#9;{/if}&#10;&#9;&#9;&#9;&lt;/ul&gt;&#10;&#9;&#9;{/if}&#10;&#9;&lt;/div&gt;&#10;&#9;{#if error}&#10;&#9;&#9;&lt;p class=&quot;mt-1 text-sm text-red-500&quot;&gt;{error}&lt;/p&gt;&#10;&#9;{/if}&#10;&lt;/div&gt;&#10;&#10;&lt;style&gt;&#10;    input:focus {&#10;        outline: none;&#10;    }&#10;&lt;/style&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/routes/settings/+page.svelte">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/routes/settings/+page.svelte" />
              <option name="originalContent" value="&lt;script lang=&quot;ts&quot;&gt;&#10;&#9;import { type GlobalSettings, getGlobalSettings, updateGlobalSettings } from '$lib/settings';&#10;&#10;&#9;import { onMount } from 'svelte';&#10;&lt;/script&gt;&#10;&#10;&lt;div class=&quot;flex h-full w-full flex-col items-center justify-center&quot;&gt;&#10;&#10;&lt;/div&gt;&#10;" />
              <option name="updatedContent" value="&lt;script lang=&quot;ts&quot;&gt;&#10;&#9;import { getGlobalSettings, updateGlobalSettings } from '$lib/settings';&#10;&#9;import { onMount } from 'svelte';&#10;&#10;&#9;let basePath: string = '';&#10;&#9;let loading = true;&#10;&#9;let error: string | null = null;&#10;&#9;let success: boolean = false;&#10;&#10;&#9;onMount(async () =&gt; {&#10;&#9;&#9;try {&#10;&#9;&#9;&#9;const settings = await getGlobalSettings();&#10;&#9;&#9;&#9;basePath = settings.BasePath;&#10;&#9;&#9;} catch (e) {&#10;&#9;&#9;&#9;error = e instanceof Error ? e.message : String(e);&#10;&#9;&#9;} finally {&#10;&#9;&#9;&#9;loading = false;&#10;&#9;&#9;}&#10;&#9;});&#10;&#10;&#9;async function handleSubmit(e: Event) {&#10;&#9;&#9;e.preventDefault();&#10;&#9;&#9;loading = true;&#10;&#9;&#9;error = null;&#10;&#9;&#9;success = false;&#10;&#9;&#9;try {&#10;&#9;&#9;&#9;await updateGlobalSettings({ BasePath: basePath });&#10;&#9;&#9;&#9;success = true;&#10;&#9;&#9;} catch (e) {&#10;&#9;&#9;&#9;error = e instanceof Error ? e.message : String(e);&#10;&#9;&#9;} finally {&#10;&#9;&#9;&#9;loading = false;&#10;&#9;&#9;}&#10;&#9;}&#10;&lt;/script&gt;&#10;&#10;&lt;div class=&quot;flex h-full w-full flex-col items-center justify-center&quot;&gt;&#10;&#9;{#if loading}&#10;&#9;&#9;&lt;p&gt;Loading...&lt;/p&gt;&#10;&#9;{:else}&#10;&#9;&#9;&lt;form class=&quot;w-full max-w-md&quot; on:submit|preventDefault={handleSubmit}&gt;&#10;&#9;&#9;&#9;&lt;h2 class=&quot;mb-4 text-xl font-bold&quot;&gt;Global Settings&lt;/h2&gt;&#10;&#9;&#9;&#9;&lt;div class=&quot;mb-4&quot;&gt;&#10;&#9;&#9;&#9;&#9;&lt;label for=&quot;basePath&quot; class=&quot;block mb-2 font-medium&quot;&gt;Base Path&lt;/label&gt;&#10;&#9;&#9;&#9;&#9;&lt;input&#10;&#9;&#9;&#9;&#9;&#9;id=&quot;basePath&quot;&#10;&#9;&#9;&#9;&#9;&#9;type=&quot;text&quot;&#10;&#9;&#9;&#9;&#9;&#9;class=&quot;border rounded px-3 py-2 w-full&quot;&#10;&#9;&#9;&#9;&#9;&#9;bind:value={basePath}&#10;&#9;&#9;&#9;&#9;&#9;placeholder=&quot;/path/to/base&quot;&#10;&#9;&#9;&#9;&#9;&#9;required&#10;&#9;&#9;&#9;&#9;/&gt;&#10;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&lt;button type=&quot;submit&quot; class=&quot;bg-blue-600 text-white px-4 py-2 rounded&quot;&gt;Save&lt;/button&gt;&#10;&#9;&#9;&#9;{#if error}&#10;&#9;&#9;&#9;&#9;&lt;p class=&quot;mt-2 text-red-600&quot;&gt;{error}&lt;/p&gt;&#10;&#9;&#9;&#9;{/if}&#10;&#9;&#9;&#9;{#if success}&#10;&#9;&#9;&#9;&#9;&lt;p class=&quot;mt-2 text-green-600&quot;&gt;Settings updated!&lt;/p&gt;&#10;&#9;&#9;&#9;{/if}&#10;&#9;&#9;&lt;/form&gt;&#10;&#9;{/if}&#10;&lt;/div&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>